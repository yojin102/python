# -*- coding: utf-8 -*-

from tkinter import *
 
# window = Tk()
# w = Canvas(window, width=300, height=200)
# w.pack()

# i = w.create_rectangle(50, 25, 200, 100, fill="#FA88AB")

# w.coords(i,0,0,100,100)
# w.itemconfig(i, fill="blue")

# w.delete(i)
# w.delete(ALL)

# font
# canvas = Canvas(window, width=600, height=200, bg = '#afeeee')
# canvas.create_text(200, 100, fill="darkblue", font="Times 30 italic bold",
#                         text="This is a text example.")
# canvas.pack()

# 도형 그리기

# WIDTH = 600
# HEIGHT = 200
# def displayRect():
#     canvas.create_rectangle(10,10,WIDTH-10,HEIGHT-10)

# def displayOval():
#     canvas.create_oval(10,10,WIDTH-10,HEIGHT-10, fill="yellow")

# def displayArc():
#     canvas.create_arc(10,10,WIDTH-10,HEIGHT-10,start=0,
#                            extent=120,width=10,fill='blue')
# def displayPolygon():
#     canvas.create_polygon(10,10,WIDTH-10,HEIGHT-10,200,90,300, 160)

# def displayLine():
#     # canvas.create_line(10,10,WIDTH-10,HEIGHT-10,fill='green')
#     canvas.create_text(10,10,fill='green', font="Times 30 italic bold",
#                        text="This is a text example.")

# def clearCanvas():
#     canvas.delete(ALL)
    
# window=Tk()
# canvas=Canvas(window, width=WIDTH, height=HEIGHT, bg='white')
# canvas.pack()
# frame=Frame(window)
# frame.pack()

# btRectangle=Button(frame, text="Rectangle", command=displayRect).grid(row=1,column=2)
# btOval=Button(frame,text="Oval",command=displayOval).grid(row=1,column=3)
# btArc=Button(frame, text="Arc",command=displayArc).grid(row=1,column=5)
# btPolygon=Button(frame, text="Polygon",command=displayPolygon).grid(row=1,column=4)
# btLine=Button(frame, text="Line",command=displayLine).grid(row=1,column=1)
# btClear=Button(frame,text="Clear",command=clearCanvas).grid(row=1,column=7)

# 마우스 이벤트 처리
# window = Tk()
# window.geometry("500x200")

# def callback(event):
#     print(event.x, event.y, "에서 마우스 이벤트 발성")
    
# window.bind("<Button-1>", callback)


# window = Tk()

# def key(event):
#     print ( repr(event.char), "가 눌렸습니다. ")

# def callback(event):
#     frame.focus_set()
#     print(event.x, event.y, "에서 마우스 이벤트 발생")

# frame = Frame(window, width=100, height=100)
# frame.bind("<Key>", key)
# frame.bind("<Button-1>", callback)
# frame.pack()


from tkinter.colorchooser import askcolor

DEFAULT_PEN_SIZE = 1.0
DEFAULT_COLOR = "black"

mode = "pen"
old_x = None
old_y = None
mycolor = DEFAULT_COLOR
erase_on = False

def use_pen():		# 펜 버튼이 선택되면 모드를 ”pen"으로 바꾼다. 
    global mode
    mode = "pen"
    
def use_brush():	# 브러쉬 버튼이 선택되면 모드를 ”brush"으로 바꾼다. 
    global mode
    mode = "brush"

def choose_color():	# 색상 버튼이 선택되면 사용자한테 색상을 요구한다. 
    global mycolor
    mycolor = askcolor(color=mycolor)[1]

def use_eraser():	# 지우개 버튼이 선택되면 모드를 ”erase"으로 바꾼다. 
    global mode
    mode = "erase"

def paint(event):	# 이전 점과 현재 점 사이를 직선으로 연결한다. 
    global var, erase_on, mode, old_x, old_y
    fill_color = 'white' if   mode == "erase" else mycolor
    width_ = 5.0 if mode=="brush" else 0.0
    print(var.get())
    if   old_x and old_y:
        canvas.create_line(old_x, old_y, event.x, event.y,
                           capstyle=ROUND, width=width_, fill=fill_color)
    old_x = event.x
    old_y = event.y

def reset(event):	# 사용자가 마우스 버튼에서 손을 떼면 이전 점을 삭제한다. 
    global old_x, old_y
    old_x, old_y = None, None

def clear_all():	# 캔버스에 그려진 모든 그림을 삭제한다. 
    global cansvas
    canvas.delete('all')
    
window = Tk()	
var = DoubleVar()	# 슬라이더와 연결될 객체를 생성한다. 

penButton = Button(window, text='펜', command=use_pen)
penButton.grid(row=0, column=0, sticky=W+E)

brushButton = Button(window, text='굵게', command=use_brush)
brushButton.grid(row=0, column=1, sticky=W+E)

colorButton = Button(window, text='색상선택', command=choose_color)
colorButton.grid(row=0, column=2, sticky=W+E)

eraseButton = Button(window, text='지우개', command=use_eraser)
eraseButton.grid(row=0, column=3, sticky=W+E)

clearButton = Button(window, text='모두삭제', command=clear_all)
clearButton.grid(row=0, column=4, sticky=W+E)

scale = Scale(window, variable=var, orient=VERTICAL)
scale.grid(row=1, column=5, sticky=N+S)

canvas = Canvas(window, bg='white', width=600, height=400)
canvas.grid(row=1, columnspan=5)

canvas.bind('<B1-Motion>', paint)
canvas.bind('<ButtonRelease-1>', reset)

    
window.mainloop()
